@page "/SignalR"

@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<h3>SignarlRDemo</h3>

<div class="form-group">
 <label>
  User:
  <input @bind="_userInput" />
 </label>
</div>
<div class="form-group">
 <label>
  Message:
  <input @bind="_messageInput" size="50" />
 </label>
</div>
<button @onclick="Send" disabled="@(!IsConnected)">Send</button>

<hr>

<ul id="messagesList">
 @foreach (var message in _messages)
 {
  <li>@message</li>
 }
</ul>

@code {
 private HubConnection _hubConnection;
 private List<string> _messages = new List<string>();
 private string _userInput;
 private string _messageInput;

 protected override async Task OnInitializedAsync()
 {
  _hubConnection = new HubConnectionBuilder()
      .WithUrl("http://localhost:8889/MLHub")
      .Build();

  _hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
  {

   var encodedMsg = $"{user}: {message}";
   Console.WriteLine("On: " + encodedMsg);
   _messages.Add(encodedMsg);
   StateHasChanged();
  });

  await _hubConnection.StartAsync();
 }

 Task Send()
 {
  Console.WriteLine("SendAsync: " + _userInput + "/" + _messageInput);
  _hubConnection.SendAsync("SendMessage", _userInput, _messageInput);
  return Task.CompletedTask;
 }

 public bool IsConnected =>
     _hubConnection.State == HubConnectionState.Connected;
}
