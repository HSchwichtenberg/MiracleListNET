<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="MiracleList_MAUI.Views.TasksPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:bo="clr-namespace:BO;assembly=BO"
    xmlns:converters="clr-namespace:MiracleList_MAUI.Converters"
    xmlns:vm="clr-namespace:MiracleList_MAUI.ViewModels"
    x:Name="page"
    Title="{Binding Category.Name}"
    x:DataType="vm:TasksPageViewModel">
    <ContentPage.MenuBarItems>
        <MenuBarItem Text="Datei">
            <MenuFlyoutItem Command="{Binding ExportTaskListCommand}" Text="Export">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="E" Modifiers="Ctrl" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                Command="{Binding DisplayMenuItemCommand}"
                CommandParameter="Datei &gt; Beenden"
                Text="Beenden">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="X" Modifiers="Alt" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
        </MenuBarItem>
        <MenuBarItem Text="Hilfe">
            <MenuFlyoutItem
                Command="{Binding DisplayMenuItemCommand}"
                CommandParameter="Hilfe &gt; Hilfe Anzeigen"
                Text="Hilfe Anzeigen">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="{OnPlatform WinUI=F1, MacCatalyst=UIKeyInputF1}" Modifiers="None" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                Command="{Binding DisplayMenuItemCommand}"
                CommandParameter="Hilfe &gt; Info"
                Text="Info" />
        </MenuBarItem>
    </ContentPage.MenuBarItems>
    <ContentPage.ToolbarItems>
        <ToolbarItem Command="{Binding ExportTaskListCommand}" Text="Export" />
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:TaskStatusConverter x:Key="TaskStatusConverter" />
            <converters:RelativeDateConverter x:Key="RelativeDateConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <VerticalStackLayout>
        <Label Style="{StaticResource TitleStyle}">
            <Label.FormattedText>
                <FormattedString>
                    <Span Text="{Binding TaskCount}" />
                    <Span Text=" Aufgaben in " />
                    <Span FontAttributes="Italic" Text="{Binding Category.Name}" />
                </FormattedString>
            </Label.FormattedText>
        </Label>
        <Button
            Command="{Binding ExportTaskListCommand}"
            IsVisible="{x:OnIdiom Default=true,
                                  Desktop=false}"
            Text="Aufgaben exportieren" />
        <Entry
            Placeholder="Neue Aufgabe ..."
            ReturnCommand="{Binding CreateNewTaskCommand}"
            Text="{Binding NewTaskTitle}" />
        <CollectionView ItemsSource="{Binding Tasks}">
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="bo:Task">
                    <Border Style="{StaticResource CollectionItemBorder}">
                        <Grid
                            ColumnDefinitions="auto,*,auto,auto"
                            ColumnSpacing="6"
                            RowDefinitions="auto,auto"
                            RowSpacing="6">
                            <FlyoutBase.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem
                                        Command="{Binding Source={x:Reference page}, Path=BindingContext.NavigateToTaskCommand}"
                                        CommandParameter="{Binding .}"
                                        Text="Aufgabe öffnen" />
                                </MenuFlyout>
                            </FlyoutBase.ContextFlyout>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:TasksPageViewModel}}, Path=NavigateToTaskCommand}" CommandParameter="{Binding .}" />
                            </Grid.GestureRecognizers>
                            <Label
                                FontAttributes="Bold"
                                LineBreakMode="WordWrap"
                                Text="{Binding Title}" />
                            <Border Grid.Column="2" Style="{StaticResource BadgeBorder}">
                                <Label Style="{StaticResource BadgeLabel}" Text="{Binding Importance}" />
                            </Border>
                            <Label
                                Grid.Column="3"
                                Text="X"
                                ToolTipProperties.Text="{Binding Title, StringFormat='Aufgabe: {0} löschen'}">
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:TasksPageViewModel}}, Path=DeleteTaskCommand}" CommandParameter="{Binding .}" />
                                </Label.GestureRecognizers>
                            </Label>
                            <Label
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                Text="Fällig">
                                <Label.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Due, Converter={StaticResource TaskStatusConverter}}"
                                        TargetType="Label"
                                        Value="overdue">
                                        <Setter Property="TextColor" Value="Red" />
                                        <Setter Property="Text" Value="{Binding Due, Converter={StaticResource RelativeDateConverter}, StringFormat='Fällig seit {0:d}'}" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding Due, Converter={StaticResource TaskStatusConverter}}"
                                        TargetType="Label"
                                        Value="open">
                                        <Setter Property="TextColor" Value="DarkGreen" />
                                        <Setter Property="Text" Value="{Binding Due, StringFormat='Fällig am {0:d}'}" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                        </Grid>
                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
    </VerticalStackLayout>
</ContentPage>