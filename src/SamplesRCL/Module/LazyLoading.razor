@page "/Samples/DynamicDLLLoading"
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<h3>Dynamic Assembly Loading / Eigene Lazy Loading von .WASM-Dateien in Blazor WebAssemly</h3>

<button @onclick="Load" class="btn btn-default">Load @url</button>
<hr />
@Ausgabe
@code {

 string url = "/_framework/ITVisions.Blazor.wasm";
 string Ausgabe;

 async Task Load()
 {

  try
  {
   var bytes = await HttpClient.GetByteArrayAsync(url);
   var assembly = System.Reflection.Assembly.Load(bytes);
   var t = assembly.GetType("ITVisions.Blazor.BlazorUtil");
   object classInstance = Activator.CreateInstance(t, JSRuntime, NavigationManager);
   var m = t.GetMethod("GetBlazorVersionInfo");
   var r = m.Invoke(classInstance, null);

   Console.WriteLine(Ausgabe);
   Ausgabe = $"Methode ITVisions.Blazor.BlazorUtil.GetBlazorVersionInfo() liefert: " + r.ToString();
  }
  catch (Exception ex)
  {
   Ausgabe = ex.ToString();
  }

 }
}
